(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{315:function(n,e,t){"use strict";t.r(e);var r=t(38),i=Object(r.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"瀑布流插件masonry中文文档【翻译】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#瀑布流插件masonry中文文档【翻译】","aria-hidden":"true"}},[n._v("#")]),n._v(" 瀑布流插件Masonry中文文档【翻译】")]),n._v(" "),t("blockquote",[t("p",[n._v("转自："),t("a",{attrs:{href:"https://segmentfault.com/a/1190000013675077",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://segmentfault.com/a/1190000013675077"),t("OutboundLink")],1)])]),n._v(" "),t("h2",{attrs:{id:"安装install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装install","aria-hidden":"true"}},[n._v("#")]),n._v(" 安装Install")]),n._v(" "),t("h3",{attrs:{id:"下载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载","aria-hidden":"true"}},[n._v("#")]),n._v(" 下载")]),n._v(" "),t("p",[n._v("下载压缩或未压缩的masonry")]),n._v(" "),t("ul",[t("li",[n._v("masonry.pkgd.min.js （压缩）")]),n._v(" "),t("li",[n._v("masonry.pkgd.js （未压缩）")])]),n._v(" "),t("h3",{attrs:{id:"cdn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cdn","aria-hidden":"true"}},[n._v("#")]),n._v(" CDN")]),n._v(" "),t("p",[n._v("在unpkg直接饮用Masonry文件。")]),n._v(" "),t("pre",[t("code",[n._v('<script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.js"><\/script>\n')])]),n._v(" "),t("h3",{attrs:{id:"包管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包管理","aria-hidden":"true"}},[n._v("#")]),n._v(" 包管理")]),n._v(" "),t("p",[n._v("使用Bower安装")]),n._v(" "),t("pre",[t("code",[n._v("bower install masonry --save\n")])]),n._v(" "),t("p",[n._v("使用npm安装")]),n._v(" "),t("pre",[t("code",[n._v("npm install masonry-layout\n")])]),n._v(" "),t("h2",{attrs:{id:"入门getting-started"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#入门getting-started","aria-hidden":"true"}},[n._v("#")]),n._v(" 入门Getting started")]),n._v(" "),t("h3",{attrs:{id:"html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html","aria-hidden":"true"}},[n._v("#")]),n._v(" HTML")]),n._v(" "),t("p",[n._v("在你的项目中引入Masonry.js")]),n._v(" "),t("pre",[t("code",[n._v('<script src="/path/to/masonry.pkgd.min.js"><\/script>\n')])]),n._v(" "),t("p",[n._v("Masonry的运行需要一个包含一些列子组件的grid容器标签")]),n._v(" "),t("pre",[t("code",[n._v('<div class="grid">\n  <div class="grid-item">...</div>\n  <div class="grid-item grid-item--width2">...</div>\n  <div class="grid-item">...</div>\n  ...\n</div>\n')])]),n._v(" "),t("h3",{attrs:{id:"css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[n._v("#")]),n._v(" CSS")]),n._v(" "),t("p",[n._v("你可以通过CSS控制所有组件的尺寸")]),n._v(" "),t("pre",[t("code",[n._v(".grid-item { width: 200px; }\n.grid-item--width2 { width: 400px; }\n")])]),n._v(" "),t("h3",{attrs:{id:"通过jquery初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过jquery初始化","aria-hidden":"true"}},[n._v("#")]),n._v(" 通过jQuery初始化")]),n._v(" "),t("p",[n._v("你可以将Masonry作为一个jQuery插件来使用"),t("code",[n._v("$('selector').masonry()")])]),n._v(" "),t("pre",[t("code",[n._v("$('.grid').masonry({\n  // options\n  itemSelector: '.grid-item',\n  columnWidth: 200\n});\n")])]),n._v(" "),t("h3",{attrs:{id:"通过原生javascript初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过原生javascript初始化","aria-hidden":"true"}},[n._v("#")]),n._v(" 通过原生JavaScript初始化")]),n._v(" "),t("p",[n._v("你可以通过原生JS使用Masonry："),t("code",[n._v("new Masonry( elem, options )")]),n._v("。构造函数"),t("code",[n._v("Masonry()")]),n._v("接收两个参数：容器标签和配置对象。")]),n._v(" "),t("pre",[t("code",[n._v("var elem = document.querySelector('.grid');\nvar msnry = new Masonry( elem, {\n  // options\n  itemSelector: '.grid-item',\n  columnWidth: 200\n});\n// element argument can be a selector string\n//   for an individual element\nvar msnry = new Masonry( '.grid', {\n  // options\n});\n")])]),n._v(" "),t("h3",{attrs:{id:"在html中初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在html中初始化","aria-hidden":"true"}},[n._v("#")]),n._v(" 在HTML中初始化")]),n._v(" "),t("p",[n._v("你也可以在HTML中初始化Masonry，这样不需要书写任何JavaScript。在容器标签中增加"),t("code",[n._v("data-masonry")]),n._v("属性，其值则是Masonry组件的配置")]),n._v(" "),t("pre",[t("code",[n._v('<div class="grid" data-masonry=\'{ "itemSelector": ".grid-item", "columnWidth": 200 }\'>\n')])]),n._v(" "),t("p",[t("em",[n._v("注意：在HTML中必须以JSON格式配置，key必须带引号，例如："),t("code",[n._v('"itemSelector":')]),n._v("。 "),t("code",[n._v("data-masonry")]),n._v("的值使用单引号，JSON使用双引号。")]),t("br"),n._v("\n在Masonry v3版本，HTML初始化需要使用特定的class： "),t("code",[n._v("js-masonry")]),n._v(" ，设置配置需要属性"),t("code",[n._v("data-masonry-options")]),n._v("，在Masonry v4之后版本中，这种写法也是兼容的。")]),n._v(" "),t("pre",[t("code",[n._v('<div class="grid js-masonry"\n  data-masonry-options=\'{ "itemSelector": ".grid-item", "columnWidth": 200 }\'>\n')])]),n._v(" "),t("h2",{attrs:{id:"布局layout"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#布局layout","aria-hidden":"true"}},[n._v("#")]),n._v(" 布局Layout")]),n._v(" "),t("h3",{attrs:{id:"组件尺寸"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件尺寸","aria-hidden":"true"}},[n._v("#")]),n._v(" 组件尺寸")]),n._v(" "),t("p",[n._v("你可以通过CSS控制组件的尺寸")]),n._v(" "),t("pre",[t("code",[n._v('div class="grid">\n  <div class="grid-item"></div>\n  <div class="grid-item grid-item--width2"></div>\n  <div class="grid-item grid-item--height2"></div>\n  ...\n</div>\n\n.grid-item {\n  float: left;\n  width: 80px;\n  height: 60px;\n  border: 2px solid hsla(0, 0%, 0%, 0.5);\n}\n\n.grid-item--width2 { width: 160px; }\n.grid-item--height2 { height: 140px; }\n')])]),n._v(" "),t("h3",{attrs:{id:"响应式布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#响应式布局","aria-hidden":"true"}},[n._v("#")]),n._v(" 响应式布局")]),n._v(" "),t("p",[n._v("组件的尺寸可设置成百分比从而适应响应式的布局，在设置masonry布局模式时，将"),t("code",[n._v("columnWidth")]),n._v("设置为指定组件的尺寸，设置"),t("code",[n._v("percentPosition: true")]),n._v(" 。组件的位置将不再改变，window改变大小事，组件将以百分比的形式响应式布局。")]),n._v(" "),t("pre",[t("code",[n._v('<div class="grid">\n  \x3c!-- width of .grid-sizer used for columnWidth --\x3e\n  <div class="grid-sizer"></div>\n  <div class="grid-item"></div>\n  <div class="grid-item grid-item--width2"></div>\n  ...\n</div>\n\n/* fluid 5 columns */\n.grid-sizer,\n.grid-item { width: 20%; }\n/* 2 columns */\n.grid-item--width2 { width: 40%; }\n\n$(\'.grid\').masonry({\n  // set itemSelector so .grid-sizer is not used in layout\n  itemSelector: \'.grid-item\',\n  // use element for option\n  columnWidth: \'.grid-sizer\',\n  percentPosition: true\n})\n')])]),n._v(" "),t("h3",{attrs:{id:"imagesloaded"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#imagesloaded","aria-hidden":"true"}},[n._v("#")]),n._v(" imagesLoaded")]),n._v(" "),t("p",[n._v("Masonry排列未加载完成的图片时会导致元素的重叠，imagesLoaded可以解决这个问题。imagesLoaded是一个独立的脚本插件，你可以在imagesloaded.desandro.com下载。"),t("br"),n._v("\n初始化Masonry，在每一张图片加载完成后触发布局。")]),n._v(" "),t("pre",[t("code",[n._v("// init Masonry\nvar $grid = $('.grid').masonry({\n  // options...\n});\n// layout Masonry after each image loads\n$grid.imagesLoaded().progress( function() {\n  $grid.masonry('layout');\n});\n")])]),n._v(" "),t("p",[n._v("或者在所有图片都加载完成后初始化Masonry")]),n._v(" "),t("pre",[t("code",[n._v("var $grid = $('.grid').imagesLoaded( function() {\n  // init Masonry after all images have loaded\n  $grid.masonry({\n    // options...\n  });\n});\n")])]),n._v(" "),t("h2",{attrs:{id:"配置项options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置项options","aria-hidden":"true"}},[n._v("#")]),n._v(" 配置项Options")]),n._v(" "),t("p",[n._v("除了"),t("code",[n._v("columnWidth")]),n._v("和"),t("code",[n._v("itemSelector")]),n._v("以外，所有的配置项都是可以选择的。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$('.grid').masonry({\n  columnWidth: 200,\n  itemSelector: '.grid-item'\n});\n\n// vanilla JS （原生JS）\nvar msnry = new Masonry( '.grid', {\n  columnWidth: 200,\n  itemSelector: '.grid-item'\n});\n\n\x3c!-- in HTML --\x3e\n<div class=\"grid\" data-masonry='{ \"columnWidth\": 200, \"itemSelector\": \".grid-item\" }'>\n")])]),n._v(" "),t("h3",{attrs:{id:"必选配置项recommended"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#必选配置项recommended","aria-hidden":"true"}},[n._v("#")]),n._v(" 必选配置项Recommended")]),n._v(" "),t("p",[t("strong",[n._v("itemSelector")]),t("br"),n._v("\n用于指定参与布局的子组件。"),t("br"),n._v("\n我们建议始终设置项，用于区分参组件元素是否参与布局。")]),n._v(" "),t("pre",[t("code",[n._v('itemSelector: \'.grid-item\'\n\n<div class="grid">\n  \x3c!-- do not use banner in Masonry layout --\x3e\n  <!—在Masonry布局时忽略 banner\n  <div class="static-banner">Static banner</div>\n  <div class="grid-item"></div>\n  <div class="grid-item"></div>\n  ...\n</div>\n')])]),n._v(" "),t("p",[t("strong",[n._v("columnWidth")]),t("br"),n._v("\n用于在水平网格上对齐组件")]),n._v(" "),t("p",[t("em",[n._v("我们建议设置columnWidth，如果没有设置columnWidth，Masonry将使用第一个组件的外宽作为默认值。")])]),n._v(" "),t("pre",[t("code",[n._v("columnWidth: 80\n")])]),n._v(" "),t("p",[n._v("使用组件尺寸，在响应式布局中奖组件的宽度设置成百分比，设置"),t("code",[n._v("columnWidth")]),n._v("时，将值设置为指定组件选择器的字符串，即使用该组件的外宽。")]),n._v(" "),t("pre",[t("code",[n._v('div class="grid">\n  \x3c!-- .grid-sizer empty element, only used for element sizing --\x3e\n  <div class="grid-sizer"></div>\n  <div class="grid-item"></div>\n  <div class="grid-item grid-item--width2"></div>\n  ...\n</div>\n\n/* fluid 5 columns */\n.grid-sizer,\n.grid-item { width: 20%; }\n/* 2 columns wide */\n.grid-item--width2 { width: 40%; }\n\n// use outer width of grid-sizer for columnWidth\ncolumnWidth: \'.grid-sizer\',\nitemSelector: \'.grid-item\',\npercentPosition: true\n')])]),n._v(" "),t("h3",{attrs:{id:"布局layout-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#布局layout-2","aria-hidden":"true"}},[n._v("#")]),n._v(" 布局Layout")]),n._v(" "),t("p",[t("strong",[n._v("组件尺寸Element sizing")]),t("br"),n._v("\n尺寸配置项"),t("code",[n._v("columnWidth")]),n._v("和"),t("code",[n._v("gutter")]),n._v("可以可以设置组件的列宽和间距。")]),n._v(" "),t("pre",[t("code",[n._v('<div class="grid">\n  \x3c!-- .grid-sizer empty element, only used for element sizing --\x3e\n  <div class="grid-sizer"></div>\n  <div class="grid-item"></div>\n  <div class="grid-item grid-item--width2"></div>\n  ...\n</div>\n\n/* fluid 5 columns */\n.grid-sizer,\n.grid-item { width: 20%; }\n/* 2 columns wide */\n.grid-item--width2 { width: 40%; }\n\n// use outer width of grid-sizer for columnWidth\ncolumnWidth: \'.grid-sizer\',\n// do not use .grid-sizer in layout\nitemSelector: \'.grid-item\',\npercentPosition: true\n')])]),n._v(" "),t("p",[n._v("该配置项可以设置为一个选择器的字符串或一个元素")]),n._v(" "),t("pre",[t("code",[n._v("// set to a selector string\n// first matching element within container element will be used\ncolumnWidth: '.grid-sizer'\n\n// set to an element\ncolumnWidth: $grid.find('.grid-sizer')[0]\n")])]),n._v(" "),t("p",[n._v("组件尺寸允许你使用CSS控制Masonry的布局。这在响应式布局和媒体查询中非常有用。")]),n._v(" "),t("pre",[t("code",[n._v("/* 3 columns by default */\n.grid-sizer { width: 33.333%; }\n\n@media screen and (min-width: 768px) {\n  /* 5 columns for larger screens */\n  .grid-sizer { width: 20%; }\n}\n")])]),n._v(" "),t("p",[t("strong",[n._v("Gutter（间距）")])]),n._v(" "),t("pre",[t("code",[n._v("    gutter: 10\n")])]),n._v(" "),t("p",[n._v("在js配置项gutter可以设置组件的横向间距，使用CSS margin可设置组件的纵向间距。")]),n._v(" "),t("pre",[t("code",[n._v("gutter: 10\n")])]),n._v(" "),t("p",[n._v("css:")]),n._v(" "),t("pre",[t("code",[n._v(".grid-item {\n  margin-bottom: 10px;\n}\n")])]),n._v(" "),t("p",[n._v("在响应式布局中使用组件尺寸将宽度设置为百分比时，可以将gutter的值设置为选择器字符串或者一个元素。")]),n._v(" "),t("pre",[t("code",[n._v('<div class="grid">\n  <div class="grid-sizer"></div>\n  <div class="gutter-sizer"></div>\n  <div class="grid-item"></div>\n  <div class="grid-item grid-item--width2"></div>\n  ...\n</div>\n\n.grid-sizer,\n.grid-item { width: 22%; }\n.gutter-sizer { width: 4%; }\n.grid-item--width2 { width: 48%; }\n\ncolumnWidth: \'.grid-sizer\',\ngutter: \'.gutter-sizer\',\nitemSelector: \'.grid-item\',\npercentPosition: true\n')])]),n._v(" "),t("p",[t("strong",[n._v("horizontalOrder")]),t("br"),n._v("\n使组件按照从左到右排列。（对比组件们在第二排的排列）")]),n._v(" "),t("pre",[t("code",[n._v("horizontalOrder: true\n")])]),n._v(" "),t("p",[t("img",{attrs:{src:"/img/bV5wjf/view",alt:"clipboard.png",title:"clipboard.png"}}),t("br"),n._v(" "),t("img",{attrs:{src:"/img/bV5wjg/view",alt:"clipboard.png",title:"clipboard.png"}})]),n._v(" "),t("p",[t("strong",[n._v("percentPosition")]),t("br"),n._v("\n设置组件的位置（尺寸）为百分比而非像素数。"),t("code",[n._v("percentPosition: true")]),n._v("可以使宽度为百分比的组件不改变他们原本的位置。")]),n._v(" "),t("pre",[t("code",[n._v("// set positions with percent values\npercentPosition: true,\ncolumnWidth: '.grid-sizer',\nitemSelector: '.grid-item'\n\n/* fluid 5 columns */\n.grid-sizer,\n.grid-item { width: 20%; }\n")])]),n._v(" "),t("p",[t("strong",[n._v("Stamp")]),t("br"),n._v("\n指定组件为"),t("code",[n._v("stamp")]),n._v("。Masonry在布局时会避开这些组件。"),t("br"),n._v("\n配置项stamp只在Masonry实例第一次初始化完成后黏贴指定组件，但你可以通过"),t("code",[n._v("stamp method")]),n._v("更改后续的stamp布局。")]),n._v(" "),t("pre",[t("code",[n._v('<div class="grid">\n  <div class="stamp stamp1"></div>\n  <div class="stamp stamp2"></div>\n  <div class="grid-item"></div>\n  <div class="grid-item"></div>\n  ....\n</div>\n\n// specify itemSelector so stamps do get laid out\nitemSelector: \'.grid-item\',\n// stamp elements\nstamp: \'.stamp\'\n\n/* position stamp elements with CSS */\n.stamp {\n  position: absolute;\n  background: orange;\n  border: 4px dotted black;\n}\n.stamp1 {\n  left: 30%;\n  top: 10px;\n  width: 20%;\n  height: 100px;\n}\n.stamp2 {\n  right: 10%;\n  top: 20px;\n  width: 70%;\n  height: 30px;\n}\n')])]),n._v(" "),t("p",[t("strong",[n._v("fitWidth")])]),n._v(" "),t("p",[n._v("根据父级容器的尺寸，设置容器的宽，以适应可用的列数。启用之后将容器grid居中")]),n._v(" "),t("pre",[t("code",[n._v("fitWidth: true\n\n/* center container with CSS */\n.grid {\n  margin: 0 auto;\n}\n")])]),n._v(" "),t("p",[t("strong",[n._v("originLeft")]),t("br"),n._v("\n控制水平布局，默认状态下"),t("code",[n._v("originLeft: true")]),n._v("控件从左到右布局，设置"),t("code",[n._v("originLeft: false")]),n._v("后，控件从右向左布局。"),t("br"),n._v(" "),t("code",[n._v("originLeft")]),n._v("Masonry v3使用"),t("code",[n._v("isOriginLeft")]),n._v("，在Masonry v4之后"),t("code",[n._v("isOriginLeft")]),n._v("也是被兼容的。")]),n._v(" "),t("pre",[t("code",[n._v("originLeft: false\n")])]),n._v(" "),t("p",[t("strong",[n._v("originTop")]),t("br"),n._v("\n类似originLeft，开启"),t("code",[n._v("originTop: false")]),n._v("后，自下而上布局")]),n._v(" "),t("h3",{attrs:{id:"设置（setup）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置（setup）","aria-hidden":"true"}},[n._v("#")]),n._v(" 设置（Setup）")]),n._v(" "),t("p",[t("strong",[n._v("containerStyle")]),t("br"),n._v("\n设置父级容器grid的css样式。默认状态下为position:’relative’，禁用grid容器的所有样式：containerStyle:null")]),n._v(" "),t("pre",[t("code",[n._v("// default\n// containerStyle: { position: 'relative' }\n\n// disable any styles being set on container\n// useful if using absolute position on container\ncontainerStyle: null\n")])]),n._v(" "),t("p",[t("strong",[n._v("transitionDuration")]),t("br"),n._v("\n控件改变位置或重排的缓动时间。默认为0.4s")]),n._v(" "),t("pre",[t("code",[n._v("// fast transitions\ntransitionDuration: '0.2s'\n\n// slow transitions\ntransitionDuration: '0.8s'\n\n// no transitions\ntransitionDuration: 0\n")])]),n._v(" "),t("p",[t("strong",[n._v("stagger")]),t("br"),n._v("\n控件重排的时间。当一个控件改变了位置，其他控件逐次的改变位置进行重排，stagger属性即为每个控件发生重排的缓动时间。，默认为值30（毫秒）")]),n._v(" "),t("pre",[t("code",[n._v("stagger: 30\n")])]),n._v(" "),t("p",[t("strong",[n._v("resize")]),t("br"),n._v("\n当窗口大小改变时控件重排以适应父级容器大小。默认为允许重排"),t("code",[n._v("resize: true")]),n._v("，在v3版本中使用"),t("code",[n._v("isResizeBound")]),n._v("，并在v4版本下兼容。")]),n._v(" "),t("pre",[t("code",[n._v("// disable window resize behavior\nresize: false\n\n\n/* grid has fixed width */\n.grid {\n  width: 320px;\n}\n")])]),n._v(" "),t("p",[t("strong",[n._v("initLayout")]),t("br"),n._v("\n允许初始化布局，默认开启。"),t("br"),n._v("\n设置为"),t("code",[n._v("initLayout: false")]),n._v("，可以禁止初始化布局，你可以通过methods或者增加event事件的方法开启布局。V3版本使用"),t("code",[n._v("isInitLayout")]),n._v("。")]),n._v(" "),t("pre",[t("code",[n._v("var $grid = $('.grid').masonry({\n  // disable initial layout\n  initLayout: false,\n  //...\n});\n// bind event\n$grid.masonry( 'on', 'layoutComplete', function() {\n  console.log('layout is complete');\n});\n// trigger initial layout\n$grid.masonry();\n")])]),n._v(" "),t("h2",{attrs:{id:"方法（methods）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法（methods）","aria-hidden":"true"}},[n._v("#")]),n._v(" 方法（Methods）")]),n._v(" "),t("p",[n._v("Methods是Masonry实例的行为"),t("br"),n._v("\n使用jQuery时，methods遵从jQuery格式"),t("code",[n._v(".masonry( 'methodName' /* arguments */ )")])]),n._v(" "),t("pre",[t("code",[n._v("$grid.masonry()\n  .append( elem )\n  .masonry( 'appended', elem )\n  // layout\n  .masonry();\n")])]),n._v(" "),t("p",[n._v("原生JS的method使用类似："),t("code",[n._v("masonry.methodName( /* arguments */ )")]),n._v("，与jQuery不同，原生JS不能使用链（chaining）.")]),n._v(" "),t("pre",[t("code",[n._v("// vanilla JS\nvar msnry = new Masonry( '.grid', {...});\ngridElement.appendChild( elem );\nmsnry.appended( elem );\nmsnry.layout();\n")])]),n._v(" "),t("h3",{attrs:{id:"布局（layout）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#布局（layout）","aria-hidden":"true"}},[n._v("#")]),n._v(" 布局（Layout）")]),n._v(" "),t("p",[t("strong",[n._v("layout / .masonry()")]),t("br"),n._v("\n将所有组件布局。"),t("code",[n._v("layout")]),n._v("用于当一个组件改变了尺寸后所有的控件需要重新布局。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.masonry()\n// vanilla JS\nmsnry.layout()\n\nvar $grid = $('.grid').masonry({\n  columnWidth: 80\n});\n// change size of item by toggling gigante class\n$grid.on( 'click', '.grid-item', function() {\n  $(this).toggleClass('gigante');\n  // trigger layout after item size changes\n  $grid.masonry('layout');\n});\n")])]),n._v(" "),t("p",[t("strong",[n._v("layoutItems")]),t("br"),n._v("\n布局指定控件")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.masonry( 'layoutItems', items, isStill )\n// vanilla JS\nmsnry.layoutItems( items, isStill )\n")])]),n._v(" "),t("p",[t("code",[n._v("items Masonry")]),n._v("控件的数组"),t("br"),n._v(" "),t("code",[n._v("isStill")]),n._v("布尔型，禁止变换"),t("br"),n._v(" "),t("strong",[n._v("stamp")]),t("br"),n._v("\n在排列中黏贴指定控件，Masonry会围绕被黏贴的元素进行排列")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.masonry( 'stamp', elements )\n// vanilla JS\nmsnry.stamp( elements )\n")])]),n._v(" "),t("p",[t("code",[n._v("elements")]),n._v(" element,jQuery对象，节点，或数组"),t("br"),n._v("\n设置不参与瀑布流布局的对象，以选择器形式给出。")]),n._v(" "),t("pre",[t("code",[n._v("var $grid = $('.grid').masonry({\n  // specify itemSelector so stamps do get laid out\n  itemSelector: '.grid-item',\n  columnWidth: 80\n});\nvar $stamp = $grid.find('.stamp');\nvar isStamped = false;\n\n$('.stamp-button').on( 'click', function() {\n  // stamp or unstamp element\n  if ( isStamped ) {\n    $grid.masonry( 'unstamp', $stamp );\n  } else {\n    $grid.masonry( 'stamp', $stamp );\n  }\n  // trigger layout\n  $grid.masonry('layout');\n  // set flag\n  isStamped = !isStamped;\n});\n")])]),n._v(" "),t("p",[t("strong",[n._v("unstamp")]),t("br"),n._v("\n解除指定元素的stamp 状态。")]),n._v(" "),t("h3",{attrs:{id:"增加-移除控件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加-移除控件","aria-hidden":"true"}},[n._v("#")]),n._v(" 增加&移除控件")]),n._v(" "),t("p",[t("strong",[n._v("Appended")]),t("br"),n._v("\n在瀑布流末尾增加新控件并重排。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.masonry( 'appended', elements )\n// vanilla JS\nmsnry.appended( elements )\n")])]),n._v(" "),t("p",[t("code",[n._v("elements element")]),n._v(",jQuery对象，节点，或数组")]),n._v(" "),t("pre",[t("code",[n._v("$('.append-button').on( 'click', function() {\n  // create new item elements\n  var $items = $('<div class=\"grid-item\">...</div>');\n  // append items to grid\n  $grid.append( $items )\n    // add and lay out newly appended items\n    .masonry( 'appended', $items );\n});\n")])]),n._v(" "),t("p",[n._v("*（注意链chaining的使用，此处为先增加节点，再讲节点重排）"),t("br"),n._v("\njQuery可以使用，增加字符串结构的HTML节点，但是masonry不行，所以当时用jQuery ajax动态加载节点时要将HTML节点转化成jQuery对象。")]),n._v(" "),t("pre",[t("code",[n._v("// does not work\n$.get( 'page2', function( content ) {\n  // HTML string added, but items not added to Masonry\n  $grid.append( content ).masonry( 'appended', content );\n});\n\n// does work\n$.get( 'page2', function( content ) {\n  // wrap content in jQuery object\n  var $content = $( content );\n  // add jQuery object\n  $grid.append( $content ).masonry( 'appended', $content );\n});\n")])]),n._v(" "),t("p",[t("strong",[n._v("prepended")]),t("br"),n._v("\n类似append，在顶部增加新节点并重排。"),t("br"),n._v(" "),t("strong",[n._v("addItems")]),t("br"),n._v("\n项Masonry实例中增加控件元素，addItems不能像append和prepended重排新增加的元素")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.masonry( 'addItems', elements )\n// vanilla JS\nmsnry.addItems( elements )\n")])]),n._v(" "),t("p",[t("strong",[n._v("remove")]),t("br"),n._v("\n从Masonry实例和DOM中移除元素")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.masonry( 'remove', elements )\n// vanilla JS\nmsnry.remove( elements )\n\n$grid.on( 'click', '.grid-item', function() {\n  // remove clicked element\n  $grid.masonry( 'remove', this )\n    // layout remaining item elements\n    .masonry('layout');\n});\n")])]),n._v(" "),t("h3",{attrs:{id:"事件（events）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件（events）","aria-hidden":"true"}},[n._v("#")]),n._v(" 事件（Events）")]),n._v(" "),t("p",[t("strong",[n._v("on")]),t("br"),n._v("\n增加一个Masonry事件监听。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\nvar msnry = $grid.masonry( 'on', eventName, listener )\n// vanilla JS\nmsnry.on( eventName, listener )\n")])]),n._v(" "),t("p",[t("code",[n._v("eventName")]),n._v(" 字符串，Masonry事件名称"),t("br"),n._v(" "),t("code",[n._v("listener")]),n._v(" 方法"),t("br"),n._v(" "),t("strong",[n._v("off")]),t("br"),n._v("\n移除Masonry事件")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\nvar msnry = $grid.masonry( 'off', eventName, listener )\n// vanilla JS\nmsnry.off( eventName, listener )\n")])]),n._v(" "),t("p",[t("code",[n._v("eventName")]),n._v(" 字符串，Masonry事件名称"),t("br"),n._v(" "),t("code",[n._v("listener")]),n._v(" 方法"),t("br"),n._v(" "),t("strong",[n._v("once")]),t("br"),n._v("\n增加一个Masonry事件，只触发一次。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\nvar msnry = $grid.masonry( 'once', eventName, listener )\n// vanilla JS\nmsnry.once( eventName, listener )\n")])]),n._v(" "),t("p",[t("code",[n._v("eventName")]),n._v(" 字符串，Masonry事件名称"),t("br"),n._v(" "),t("code",[n._v("listener")]),n._v(" 方法")]),n._v(" "),t("pre",[t("code",[n._v("$grid.masonry( 'once', 'layoutComplete', function() {\n  console.log('layout is complete, just once');\n})\n")])]),n._v(" "),t("h3",{attrs:{id:"utilities"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utilities","aria-hidden":"true"}},[n._v("#")]),n._v(" Utilities")]),n._v(" "),t("p",[t("strong",[n._v("reloadItems")]),t("br"),n._v("\nRecollects all item elements."),t("br"),n._v("\nFor frameworks like Angular and React, reloadItems may be useful to apply changes to the DOM to Masonry.")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.masonry('reloadItems')\n// vanilla JS\nmsnry.reloadItems()\n")])]),n._v(" "),t("p",[t("strong",[n._v("destroy")]),t("br"),n._v("\n移除所有的Masonry功能，"),t("code",[n._v("destroy")]),n._v("将恢复元素预加载之前的状态。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.masonry('destroy')\n// vanilla JS\nmsnry.destroy()\n\nvar masonryOptions = {\n  itemSelector: '.grid-item',\n  columnWidth: 80\n};\n// initialize Masonry\nvar $grid = $('.grid').masonry( masonryOptions );\nvar isActive = true;\n\n$('.toggle-button').on( 'click', function() {\n  if ( isActive ) {\n    $grid.masonry('destroy'); // destroy\n  } else {\n    $grid.masonry( masonryOptions ); // re-initialize\n  }\n  // set flag\n  isActive = !isActive;\n});\n")])]),n._v(" "),t("p",[t("strong",[n._v("getItemElements")]),t("br"),n._v("\n返回一个组件元素的数组")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\nvar elems = $grid.masonry('getItemElements')\n// vanilla JS\nvar elems = msnry.getItemElements()\n")])]),n._v(" "),t("p",[t("code",[n._v("elems")]),n._v(" 数组"),t("br"),n._v(" "),t("strong",[n._v("jQuery.fn.data('masonry')")]),t("br"),n._v("\n从jQuery对象中取出Masonry实例，以便读取Masonry的属性。")]),n._v(" "),t("pre",[t("code",[n._v("var msnry = $('.grid').data('masonry')\n// access Masonry properties\nconsole.log( msnry.items.length + ' filtered items'  )\n")])]),n._v(" "),t("p",[t("strong",[n._v("Masonry.data")]),t("br"),n._v("\n通过元素取出Masonry实例，"),t("code",[n._v("Masonry.data()")]),n._v("用于从HTML初始化的Masonry实例中取出Masonry属性。")]),n._v(" "),t("pre",[t("code",[n._v("var msnry = Masonry.data( element )\n")])]),n._v(" "),t("p",[t("code",[n._v("element")]),n._v(" 控件或选择器的字符串"),t("br"),n._v(" "),t("code",[n._v("msnry")]),n._v(" Masonry")]),n._v(" "),t("pre",[t("code",[n._v("\x3c!-- init Masonry in HTML --\x3e\n<div class=\"grid\" data-masonry='{...}'>...</div>\n\n// jQuery\n// pass in the element, $element[0], not the jQuery object\nvar msnry = Masonry.data( $('.grid')[0] )\n\n// vanilla JS\n// using an element\nvar grid = document.querySelector('.grid')\nvar msnry = Masonry.data( grid )\n// using a selector string\nvar msnry = Masonry.data('.grid')\n")])]),n._v(" "),t("h2",{attrs:{id:"事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[n._v("#")]),n._v(" 事件")]),n._v(" "),t("h3",{attrs:{id:"事件绑定（event-binding）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定（event-binding）","aria-hidden":"true"}},[n._v("#")]),n._v(" 事件绑定（event binding）")]),n._v(" "),t("p",[t("strong",[n._v("jQuery事件绑定")]),t("br"),n._v("\n使用jQuery标准的事件方法绑定，如"),t("code",[n._v(".on()")]),n._v("，"),t("code",[n._v(".off()")]),n._v("和"),t("code",[n._v(".one()")]),n._v("。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\nvar $grid = $('.grid').masonry({...});\n\nfunction onLayout() {\n  console.log('layout done');\n}\n// bind event listener\n$grid.on( 'layoutComplete', onLayout );\n// un-bind event listener\n$grid.off( 'layoutComplete', onLayout );\n// bind event listener to be triggered just once. note ONE not ON\n$grid.one( 'layoutComplete', function() {\n  console.log('layout done, just this one time');\n});\n")])]),n._v(" "),t("p",[n._v("jQuery事件监听器需要一个"),t("code",[n._v("event")]),n._v("argument参数，原生的JS不需要。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery, has event argument\n$grid.on( 'layoutComplete', function( event, items ) {\n  console.log( items.length );\n});\n\n// vanilla JS, no event argument\nmsnry.on( 'layoutComplete', function( items ) {\n  console.log( items.length );\n});\n")])]),n._v(" "),t("p",[t("strong",[n._v("原生JS事件绑定")]),t("br"),n._v("\n使用原生JS方法绑定。on()，.off()，.once()。")]),n._v(" "),t("pre",[t("code",[n._v("// vanilla JS\nvar msnry = new Masonry( '.grid', {...});\n\nfunction onLayout() {\n  console.log('layout done');\n}\n// bind event listener\nmsnry.on( 'layoutComplete', onLayout );\n// un-bind event listener\nmsnry.off( 'layoutComplete', onLayout );\n// bind event listener to be triggered just once\nmsnry.once( 'layoutComplete', function() {\n  console.log('layout done, just this one time');\n});\n")])]),n._v(" "),t("h3",{attrs:{id:"masonry-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#masonry-事件","aria-hidden":"true"}},[n._v("#")]),n._v(" Masonry 事件")]),n._v(" "),t("p",[t("strong",[n._v("layoutComplete")]),t("br"),n._v("\n在布局和所有位置变化完成后触发。")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.on( 'layoutComplete', function( event, laidOutItems ) {...} )\n// vanilla JS\nmsnry.on( 'layoutComplete', function( laidOutItems ) {...} )\n")])]),n._v(" "),t("p",[t("code",[n._v("laidOutItems")]),n._v(" Masonry控件数组，已完成排列的控件")]),n._v(" "),t("pre",[t("code",[n._v("$grid.on( 'layoutComplete',\n  function( event, laidOutItems ) {\n    console.log( 'Masonry layout completed on ' +\n      laidOutItems.length + ' items' );\n  }\n);\n")])]),n._v(" "),t("p",[t("strong",[n._v("removeComplete")]),t("br"),n._v("\n元素移除后触发")]),n._v(" "),t("pre",[t("code",[n._v("// jQuery\n$grid.on( 'removeComplete', function( event, removedItems ) {...} )\n// vanilla JS\nmsnry.on( 'removeComplete', function( removedItems ) {...} )\n")])]),n._v(" "),t("p",[t("code",[n._v("removedItems")]),n._v("Masonry控件数组，被移除的控件")]),n._v(" "),t("pre",[t("code",[n._v("$grid.on( 'removeComplete',\n  function( event, removedItems ) {\n    notify( 'Removed ' + removedItems.length + ' items' );\n  }\n);\n")])])])},[],!1,null,null,null);e.default=i.exports}}]);